{#- COPYRIGHT AND LICENSE #}
{%- if data['project']['company'] or data['project']['license'] -%}
/*
	{%- if data['project']['company'] %}
 * Copyright (c) {{data['project']['company']}}
	{%- endif %}
	{%- if data['project']['company'] and data['project']['license'] %}
 * 
	{%- endif %}
	{%- if data['project']['license'] %}
 * {{data['project']['license'] }}
	{%- endif %}
 */
{% raw %}
{% endraw %}
{%- endif -%}
#include "app_init.h"

/* CHESTER includes */
#include <chester/ctr_led.h>
#include <chester/ctr_wdog.h>

/* Zephyr includes */
#include <zephyr/kernel.h>
#include <zephyr/logging/log.h>

/* Standard includes */
#include <stdbool.h>

LOG_MODULE_REGISTER(main, LOG_LEVEL_DBG);

extern struct ctr_wdog_channel g_app_wdog_channel;

int main(void)
{
	int ret;

	LOG_INF("Build time: " __DATE__ " " __TIME__);

	ret = app_init();
	if (ret) {
		LOG_ERR("Call `app_init` failed: %d", ret);
		k_oops();
	}

	for (;;) {
		LOG_INF("Alive"
		);
#if defined(FEATURE_SUBSYSTEM_WDOG)
		ret = ctr_wdog_feed(&g_app_wdog_channel);
		if (ret) {
			LOG_ERR("Call `ctr_wdog_feed` failed: %d", ret);
			k_oops();
		}
#endif /* defined(FEATURE_SUBSYSTEM_WDOG) */

		ctr_led_set(CTR_LED_CHANNEL_G, true);
		k_sleep(K_MSEC(30));
		ctr_led_set(CTR_LED_CHANNEL_G, false);

		k_sleep(K_SECONDS(5));
	}

	return 0;
}
